<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:beans="http://www.springframework.org/schema/lang"
       
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-3.0.2.xsd
       http://www.springframework.org/schema/lang
       http://www.springframework.org/schema/lang/spring-lang-2.0.xsd">

    <context:property-placeholder ignore-resource-not-found="true" location="classpath:simplepay_default.properties,file:${user.home}/simplepay.properties" />
    
    <bean id="strongEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
        <!--property name="algorithm">
            <value>PBEWithMD5AndTripleDES</value>
        </property-->
        <property name="password">
            <value>jasypt</value>
        </property>
    </bean>
    
        
    <!-- CRUD AND SERVICE BEANS -->
    <bean id="userRepository" class="dk.apaq.framework.repository.CollectionRepository"/>

    <bean id="tokenRepository" class="dk.apaq.framework.repository.CollectionRepository"/>
    
    <bean id="transactionRepository" class="dk.apaq.framework.repository.CollectionRepository"/>
    
    <bean id="merchantRepository" class="dk.apaq.simplepay.data.MerchantRepository">
        <constructor-arg>
            <bean class="dk.apaq.framework.repository.CollectionRepository"/>
        </constructor-arg>
        <property name="service" ref="service"/>
    </bean>

    <bean id="eventRepository" class="dk.apaq.framework.repository.CollectionRepository"/>
    
    <bean id="service" class="dk.apaq.simplepay.PayService">
        <property name="merchantRepository" ref="merchantRepository"/>
        <property name="userRepository" ref="userRepository"/>
        <property name="tokenRepository" ref="tokenRepository"/>
        <property name="transactionRepository" ref="transactionRepository"/>
        <property name="eventRepository" ref="eventRepository"/>
        <property name="paymentGatewayManager" ref="paymentGatewayManager"/>
    </bean>
    
    <bean id="testGateway" class="dk.apaq.simplepay.gateway.test.TestGateway"/>
    <!--bean id="netsGateway" class="dk.apaq.simplepay.gateway.nets.Nets">
        <constructor-arg>
            <bean class="dk.apaq.nets.payment.Nets"/>
        </constructor-arg>
    </bean-->
        
    <!-- PAYMENT -->
    <bean id="paymentGatewayManager" class="dk.apaq.simplepay.gateway.PaymentGatewayManager">
        <property name="gatewayMap">
            <map> 
                <entry key="Test" value-ref="testGateway"/>
                <!--entry key="Nets" value-ref="netsGateway"/-->
            </map>    
        </property>   
    </bean>    
    
    <!-- MESSAGING BEANS -->
    <bean id="mailSender" class="dk.apaq.simplepay.messaging.MockMailSender"/>

    <!-- this is a template message that we can pre-load with default state -->
    <bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.from}"/>
    </bean>

    
    <!-- DATA BEANS -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="SimplePay"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="${data.showSql}" />
                <property name="generateDdl" value="${data.generateDdl}" />
                <property name="databasePlatform" value="${data.dialect}" />
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.DefaultComponentSafeNamingStrategy</prop>
            </props>
        </property>
    </bean>

    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <property name="driverClass" value="${data.driverClass}" />
        <property name="jdbcUrl" value="${data.jdbcUrl}" />
        <property name="username" value="${data.username}" />
        <property name="password" value="${data.password}" />
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!-- Enables the transaction annotations -->
    <tx:annotation-driven />
       
    
    <context:annotation-config />
    
</beans>